// Generated by CoffeeScript 1.7.1
(function() {
  var answerBox, callback, currentChars, debounce, onTextEnter, prevValidClickInput, prevValidInput, processClickInput, processKeyInput, reset, textbox, timer;

  timer = void 0;

  currentChars = "";

  prevValidInput = "";

  prevValidClickInput = "";

  textbox = $(".tb");

  answerBox = $(".question");

  debounce = function(e) {
    var ch;
    if (timer) {
      clearTimeout(timer);
    }
    ch = String.fromCharCode(e.keyCode);
    console.log("prev: " + currentChars);
    currentChars = currentChars + ch;
    console.log("next: " + currentChars);
    return timer = setTimeout(callback, 300, e, currentChars);
  };

  callback = function() {
    return onTextEnter.call(null, arguments);
  };

  processKeyInput = function(chars) {
    chars = chars.replace(/[^0-9 +-.*/]/ig, '');
    return prevValidInput = chars.replace(/^[+-.*0\s/]+|[+-.*\s/]+$/g, '');
  };

  onTextEnter = function() {
    var tmpFunc;
    currentChars = arguments[0][1];
    processKeyInput(currentChars);
    console.log("prevValidInput: " + prevValidInput);
    tmpFunc = new Function("return " + prevValidInput);
    textbox.val(tmpFunc());
    return answerBox.html(prevValidInput + " =");
  };

  textbox.on("keypress", debounce);

  reset = function() {
    currentChars = "";
    prevValidInput = "";
    prevValidClickInput = "";
    timer = void 0;
    textbox.val("");
    return answerBox.html("");
  };

  processClickInput = function(chars) {
    chars = chars.replace(/[^0-9 +-.*=/]/ig, '');
    return prevValidClickInput = chars.replace(/^[0\s]+|[\s]+/g, '');
  };

  $(".key").click(function() {
    var currentValue, input, tmpFunc;
    currentValue = $(".tb").val();
    input = $(this).text().trim();
    if (input === "=") {
      processClickInput(currentValue);
      tmpFunc = new Function("return " + prevValidClickInput);
      textbox.val(tmpFunc());
    } else if (input === "AC") {
      return reset();
    } else {
      processClickInput(currentValue + input);
      textbox.val(prevValidClickInput);
    }
    return answerBox.html(prevValidClickInput + " =");
  });

}).call(this);
